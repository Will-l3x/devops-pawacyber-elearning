{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp 15\\\\source\\\\repos\\\\devops2\\\\client\\\\src\\\\components\\\\dropzone.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport $ from \"jquery\";\nimport M from \"materialize-css\";\nimport \"../assets/css/dropify.min.css\";\nimport Dropzone from \"react-dropzone\";\nimport { fileUpload } from \"../actions/fileUpload\";\n\nclass FileDropZone extends Component {\n  constructor() {\n    super();\n\n    this.onDrop = files => {\n      function getExtension(filename) {\n        var parts = filename.split(\".\");\n        return parts[parts.length - 1];\n      }\n\n      this.setState({\n        files\n      });\n      this.props.fileUpload(files);\n      console.log(this.props, this.state);\n\n      function isValidFile(filename) {\n        var ext = getExtension(filename);\n\n        switch (ext.toLowerCase()) {\n          case \"doc\":\n            return {\n              isValid: true,\n              icon: \"library_books\"\n            };\n\n          case \"docx\":\n            return {\n              isValid: true,\n              icon: \"library_books\"\n            };\n\n          case \"pdf\":\n            return {\n              isValid: true,\n              icon: \"library_books\"\n            };\n\n          case \"epub\":\n            return {\n              isValid: true,\n              icon: \"library_books\"\n            };\n\n          case \"jpg\":\n            return {\n              isValid: true,\n              icon: \"photo\"\n            };\n\n          case \"gif\":\n            return {\n              isValid: true,\n              icon: \"photo\"\n            };\n\n          case \"bmp\":\n            return {\n              isValid: true,\n              icon: \"photo\"\n            };\n\n          case \"png\":\n            return {\n              isValid: true,\n              icon: \"photo\"\n            };\n\n          case \"jpeg\":\n            return {\n              isValid: true,\n              icon: \"photo\"\n            };\n\n          case \"m4v\":\n            return {\n              isValid: true,\n              icon: \"ondemand_video\"\n            };\n\n          case \"avi\":\n            return {\n              isValid: true,\n              icon: \"ondemand_video\"\n            };\n\n          case \"mpg\":\n            return {\n              isValid: true,\n              icon: \"ondemand_video\"\n            };\n\n          case \"mp4\":\n            return {\n              isValid: true,\n              icon: \"ondemand_video\"\n            };\n\n          case \"mkv\":\n            return {\n              isValid: true,\n              icon: \"ondemand_video\"\n            };\n\n          default:\n            return {\n              isValid: false,\n              icon: \"warning\"\n            };\n        }\n      }\n\n      var file = $(\"#input-file\");\n\n      if (isValidFile(file.val()).isValid === false) {\n        $(\".file-upload\").addClass(\"upload-disabled\");\n        this.setState({\n          fileIcon: isValidFile(file.val()).icon\n        });\n        return M.toast({\n          html: \"Fail. Please select valid file type!\",\n          classes: \"red accent-2\"\n        });\n      }\n\n      $(\".file-upload\").removeClass(\"upload-disabled\");\n      this.setState({\n        fileIcon: isValidFile(file.val()).icon\n      });\n      M.toast({\n        html: \"Success. Valid file type!\",\n        classes: \"green accent-3\"\n      });\n    };\n\n    this.state = {\n      files: [],\n      fileIcon: \"\"\n    };\n    this.onDrop.bind(this);\n  }\n\n  render() {\n    const preview = {\n      display: \"inline\"\n    };\n    const files = this.state.files.map(file => /*#__PURE__*/React.createElement(\"li\", {\n      key: file.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"dropify-filename\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"file-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"dropify-filename-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, file.name, \" - \", file.size, \" bytes\"))));\n    return /*#__PURE__*/React.createElement(Dropzone, {\n      onDrop: this.onDrop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => /*#__PURE__*/React.createElement(\"section\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      className: \"dropify-wrapper\"\n    }, getRootProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropify-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, \"Drag and drop a file here or click\")), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n      id: \"input-file\"\n    }, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"dropify-clear\",\n      onClick: () => {\n        this.setState({\n          files: []\n        });\n      },\n      style: this.state.files.length > 0 ? preview : {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, \"Remove\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropify-preview\",\n      style: this.state.files.length > 0 ? preview : {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"dropify-render\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"file-icon material-icons large\",\n      style: this.state.files.length > 0 ? preview : {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }, this.state.fileIcon)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropify-infos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"dropify-infos-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, files))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({ ...state,\n  files: state.fileUpload\n});\n\nconst mapDispatchToProps = {\n  fileUpload\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FileDropZone);","map":{"version":3,"sources":["C:/Users/Hp 15/source/repos/devops2/client/src/components/dropzone.js"],"names":["React","Component","connect","$","M","Dropzone","fileUpload","FileDropZone","constructor","onDrop","files","getExtension","filename","parts","split","length","setState","props","console","log","state","isValidFile","ext","toLowerCase","isValid","icon","file","val","addClass","fileIcon","toast","html","classes","removeClass","bind","render","preview","display","map","name","size","getRootProps","getInputProps","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport $ from \"jquery\";\r\nimport M from \"materialize-css\";\r\nimport \"../assets/css/dropify.min.css\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport { fileUpload } from \"../actions/fileUpload\";\r\n\r\nclass FileDropZone extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      files: [],\r\n      fileIcon: \"\",\r\n    };\r\n    this.onDrop.bind(this);\r\n  }\r\n  onDrop = (files) => {\r\n    function getExtension(filename) {\r\n      var parts = filename.split(\".\");\r\n      return parts[parts.length - 1];\r\n    }\r\n    this.setState({ files });\r\n    this.props.fileUpload(files);\r\n    console.log(this.props, this.state)\r\n    function isValidFile(filename) {\r\n      var ext = getExtension(filename);\r\n      switch (ext.toLowerCase()) {\r\n        case \"doc\":\r\n          return { isValid: true, icon: \"library_books\" };\r\n        case \"docx\":\r\n          return { isValid: true, icon: \"library_books\" };\r\n        case \"pdf\":\r\n          return { isValid: true, icon: \"library_books\" };\r\n        case \"epub\":\r\n          return { isValid: true, icon: \"library_books\" };\r\n        case \"jpg\":\r\n          return { isValid: true, icon: \"photo\" };\r\n        case \"gif\":\r\n          return { isValid: true, icon: \"photo\" };\r\n        case \"bmp\":\r\n          return { isValid: true, icon: \"photo\" };\r\n        case \"png\":\r\n          return { isValid: true, icon: \"photo\" };\r\n        case \"jpeg\":\r\n          return { isValid: true, icon: \"photo\" };\r\n        case \"m4v\":\r\n          return { isValid: true, icon: \"ondemand_video\" };\r\n        case \"avi\":\r\n          return { isValid: true, icon: \"ondemand_video\" };\r\n        case \"mpg\":\r\n          return { isValid: true, icon: \"ondemand_video\" };\r\n        case \"mp4\":\r\n          return { isValid: true, icon: \"ondemand_video\" };\r\n        case \"mkv\":\r\n          return { isValid: true, icon: \"ondemand_video\" };\r\n        default:\r\n          return { isValid: false, icon: \"warning\" };\r\n      }\r\n    }\r\n\r\n    var file = $(\"#input-file\");\r\n    if (isValidFile(file.val()).isValid === false) {\r\n      $(\".file-upload\").addClass(\"upload-disabled\");\r\n      this.setState({ fileIcon: isValidFile(file.val()).icon });\r\n      return M.toast({\r\n        html: \"Fail. Please select valid file type!\",\r\n        classes: \"red accent-2\",\r\n      });\r\n    }\r\n    $(\".file-upload\").removeClass(\"upload-disabled\");\r\n    this.setState({ fileIcon: isValidFile(file.val()).icon });\r\n    M.toast({\r\n      html: \"Success. Valid file type!\",\r\n      classes: \"green accent-3\",\r\n    });\r\n\r\n  };\r\n  render() {\r\n    const preview = {\r\n      display: \"inline\",\r\n    };\r\n    const files = this.state.files.map((file) => (\r\n      <li key={file.name}>\r\n        <p className=\"dropify-filename\">\r\n          <span className=\"file-icon\"></span>\r\n          <span className=\"dropify-filename-inner\">\r\n            {file.name} - {file.size} bytes\r\n          </span>\r\n        </p>\r\n      </li>\r\n    ));\r\n\r\n    return (\r\n      <Dropzone onDrop={this.onDrop}>\r\n        {({ getRootProps, getInputProps }) => (\r\n          <section className=\"container\">\r\n            <div className=\"dropify-wrapper\" {...getRootProps()}>\r\n              <div className=\"dropify-message\">\r\n                {\" \"}\r\n                <p>Drag and drop a file here or click</p>\r\n              </div>\r\n              <input id=\"input-file\" {...getInputProps()}></input>\r\n              <button\r\n                className=\"dropify-clear\"\r\n                onClick={() => {\r\n                  this.setState({ files: [] });\r\n                }}\r\n                style={this.state.files.length > 0 ? preview : {}}\r\n              >\r\n                Remove\r\n              </button>\r\n              <div\r\n                className=\"dropify-preview\"\r\n                style={this.state.files.length > 0 ? preview : {}}\r\n              >\r\n                <span className=\"dropify-render\">\r\n                  <i\r\n                    className=\"file-icon material-icons large\"\r\n                    style={this.state.files.length > 0 ? preview : {}}\r\n                  >\r\n                    {this.state.fileIcon}\r\n                  </i>\r\n                </span>\r\n                <div className=\"dropify-infos\">\r\n                  <ul className=\"dropify-infos-inner\">{files}</ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        )}\r\n      </Dropzone>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  ...state,\r\n  files : state.fileUpload\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  fileUpload,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FileDropZone);\r\n"]},"metadata":{},"sourceType":"module"}