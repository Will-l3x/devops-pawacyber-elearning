{"ast":null,"code":"/** Classroom actions */\nimport { ClassroomService } from \"../services/classroom\";\nimport { ClassroomConstants } from \"../constants/classroom\";\nimport AlertActions from \"./alert\";\nexport const get_all_classwork = () => dispatch => {\n  ClassroomService.get_all_classwork().then(response => {\n    dispatch(AlertActions.success(\"Success\"));\n    dispatch({\n      type: ClassroomConstants.GET_ALL_CLASSWORK,\n      payload: response\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch(AlertActions.error(error));\n  });\n};\nexport const post_new_classroom_material = (classroom_id, data) => dispatch => {\n  ClassroomService.post_new_classroom_material(classroom_id, data).then(response => {\n    dispatch(AlertActions.success(\"Success\"));\n    dispatch({\n      type: ClassroomConstants.ADD_CLASSROOM_MATERIAL,\n      payload: response\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch(AlertActions.error(error));\n  });\n};\nexport const delete_classwork = (classroom_id, classwork_id) => dispatch => {\n  ClassroomService.delete_classwork(classroom_id, classwork_id).then(response => {\n    dispatch(AlertActions.success(\"Success\"));\n    dispatch({\n      type: ClassroomConstants.DELETE_CLASSWORK,\n      payload: response\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch(AlertActions.error(error));\n  });\n};\nexport const post_teacher_to_classroom = (classroom_id, teacher_id) => dispatch => {\n  ClassroomService.post_teacher_to_classroom(classroom_id, teacher_id).then(response => {\n    dispatch(AlertActions.success(\"Success\"));\n    dispatch({\n      type: ClassroomConstants.ADD_TEACHER,\n      payload: response\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch(AlertActions.error(error));\n  });\n};\nexport const post_student_to_classroom = (classroom_id, student_id) => dispatch => {\n  ClassroomService.post_student_to_classroom(classroom_id, student_id).then(response => {\n    dispatch(AlertActions.success(\"Success\"));\n    dispatch({\n      type: ClassroomConstants.ADD_STUDENT,\n      payload: response\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch(AlertActions.error(error));\n  });\n};\nexport const update_student_marks = (classroom_id, student_id) => dispatch => {\n  ClassroomService.update_student_marks(classroom_id, student_id).then(response => {\n    dispatch(AlertActions.success(\"Success\"));\n    dispatch({\n      type: ClassroomConstants.UPDATE_STUDENT_MARKS,\n      payload: response\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch(AlertActions.error(error));\n  });\n};\nexport const upload_marked_classwork = (classroom_id, classwork_id, data) => dispatch => {\n  ClassroomService.upload_marked_classwork(classroom_id, classwork_id, data).then(response => {\n    dispatch(AlertActions.success(\"Success\"));\n    dispatch({\n      type: ClassroomConstants.UPLOAD_MARKED_CLASSWORK,\n      payload: response\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch(AlertActions.error(error));\n  });\n};\nexport const get_all_test_folders = classroom_id => dispatch => {\n  ClassroomService.get_all_test_folders(classroom_id).then(response => {\n    dispatch(AlertActions.success(\"Success\"));\n    dispatch({\n      type: ClassroomConstants.GET_ALL_TEST_FOLDERS,\n      payload: response\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch(AlertActions.error(error));\n  });\n};\nexport const get_all_test_files = (classroom_id, test_id) => dispatch => {\n  ClassroomService.get_all_test_files(classroom_id, test_id).then(response => {\n    dispatch(AlertActions.success(\"Success\"));\n    dispatch({\n      type: ClassroomConstants.GET_ALL_TEST_FILES,\n      payload: response\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch(AlertActions.error(error));\n  });\n};\nexport const get_all_assignment_folders = classroom_id => dispatch => {\n  ClassroomService.get_all_assignment_folders(classroom_id).then(response => {\n    dispatch(AlertActions.success(\"Success\"));\n    dispatch({\n      type: ClassroomConstants.GET_ALL_ASSIGNMENT_FOLDERS,\n      payload: response\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch(AlertActions.error(error));\n  });\n};\nexport const get_all_assignment_files = (classroom_id, assignment_id) => dispatch => {\n  ClassroomService.get_all_assignment_files(classroom_id, assignment_id).then(response => {\n    dispatch(AlertActions.success(\"Success\"));\n    dispatch({\n      type: ClassroomConstants.GET_ALL_ASSIGNMENT_FILES,\n      payload: response\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch(AlertActions.error(error));\n  });\n};\nconst ClassroomActions = {\n  get_all_classwork,\n  post_new_classroom_material,\n  delete_classwork,\n  post_teacher_to_classroom,\n  post_student_to_classroom,\n  update_student_marks,\n  upload_marked_classwork,\n  get_all_test_folders,\n  get_all_assignment_folders,\n  get_all_test_files,\n  get_all_assignment_files\n};\nexport default ClassroomActions;","map":{"version":3,"sources":["C:/Users/Hp 15/source/repos/devops2/client/src/actions/classroom.js"],"names":["ClassroomService","ClassroomConstants","AlertActions","get_all_classwork","dispatch","then","response","success","type","GET_ALL_CLASSWORK","payload","catch","error","console","log","post_new_classroom_material","classroom_id","data","ADD_CLASSROOM_MATERIAL","delete_classwork","classwork_id","DELETE_CLASSWORK","post_teacher_to_classroom","teacher_id","ADD_TEACHER","post_student_to_classroom","student_id","ADD_STUDENT","update_student_marks","UPDATE_STUDENT_MARKS","upload_marked_classwork","UPLOAD_MARKED_CLASSWORK","get_all_test_folders","GET_ALL_TEST_FOLDERS","get_all_test_files","test_id","GET_ALL_TEST_FILES","get_all_assignment_folders","GET_ALL_ASSIGNMENT_FOLDERS","get_all_assignment_files","assignment_id","GET_ALL_ASSIGNMENT_FILES","ClassroomActions"],"mappings":"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","sourcesContent":["/** Classroom actions */\r\n\r\nimport { ClassroomService } from \"../services/classroom\";\r\nimport { ClassroomConstants } from \"../constants/classroom\";\r\nimport  AlertActions  from \"./alert\";\r\n\r\nexport const get_all_classwork = () => (dispatch) => {\r\n  ClassroomService.get_all_classwork()\r\n    .then((response) => {\r\n      dispatch(AlertActions.success(\"Success\"));\r\n      dispatch({\r\n        type: ClassroomConstants.GET_ALL_CLASSWORK,\r\n        payload: response,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error); dispatch(AlertActions.error(error));\r\n    });\r\n};\r\nexport const post_new_classroom_material = (classroom_id, data) => (dispatch) => {\r\n  ClassroomService.post_new_classroom_material(classroom_id, data)\r\n    .then((response) => {\r\n      dispatch(AlertActions.success(\"Success\"));\r\n      dispatch({\r\n        type: ClassroomConstants.ADD_CLASSROOM_MATERIAL,\r\n        payload: response,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error); dispatch(AlertActions.error(error));\r\n    });\r\n};\r\nexport const delete_classwork = (classroom_id, classwork_id) => (dispatch) => {\r\n  ClassroomService.delete_classwork(classroom_id, classwork_id)\r\n    .then((response) => {\r\n      dispatch(AlertActions.success(\"Success\"));\r\n      dispatch({\r\n        type: ClassroomConstants.DELETE_CLASSWORK,\r\n        payload: response,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error); dispatch(AlertActions.error(error));\r\n    });\r\n};\r\nexport const post_teacher_to_classroom = (classroom_id, teacher_id) => (dispatch) => {\r\n  ClassroomService.post_teacher_to_classroom(classroom_id, teacher_id)\r\n    .then((response) => {\r\n      dispatch(AlertActions.success(\"Success\"));\r\n      dispatch({\r\n        type: ClassroomConstants.ADD_TEACHER,\r\n        payload: response,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error); dispatch(AlertActions.error(error));\r\n    });\r\n};\r\nexport const post_student_to_classroom = (classroom_id, student_id) => (dispatch) => {\r\n  ClassroomService.post_student_to_classroom(classroom_id, student_id)\r\n    .then((response) => {\r\n      dispatch(AlertActions.success(\"Success\"));\r\n      dispatch({\r\n        type: ClassroomConstants.ADD_STUDENT,\r\n        payload: response,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error); dispatch(AlertActions.error(error));\r\n    });\r\n};\r\nexport const update_student_marks = (classroom_id, student_id) => (dispatch) => {\r\n  ClassroomService.update_student_marks(classroom_id, student_id)\r\n    .then((response) => {\r\n      dispatch(AlertActions.success(\"Success\"));\r\n      dispatch({\r\n        type: ClassroomConstants.UPDATE_STUDENT_MARKS,\r\n        payload: response,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error); dispatch(AlertActions.error(error));\r\n    });\r\n};\r\nexport const upload_marked_classwork = (classroom_id, classwork_id, data) => (dispatch) => {\r\n  ClassroomService.upload_marked_classwork(classroom_id, classwork_id, data)\r\n    .then((response) => {\r\n      dispatch(AlertActions.success(\"Success\"));\r\n      dispatch({\r\n        type: ClassroomConstants.UPLOAD_MARKED_CLASSWORK,\r\n        payload: response,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error); dispatch(AlertActions.error(error));\r\n    });\r\n};\r\nexport const get_all_test_folders = (classroom_id) => (dispatch) => {\r\n  ClassroomService.get_all_test_folders(classroom_id)\r\n    .then((response) => {\r\n      dispatch(AlertActions.success(\"Success\"));\r\n      dispatch({\r\n        type: ClassroomConstants.GET_ALL_TEST_FOLDERS,\r\n        payload: response,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error); dispatch(AlertActions.error(error));\r\n    });\r\n};\r\nexport const get_all_test_files = (classroom_id, test_id) => (dispatch) => {\r\n  ClassroomService.get_all_test_files(classroom_id, test_id)\r\n    .then((response) => {\r\n      dispatch(AlertActions.success(\"Success\"));\r\n      dispatch({\r\n        type: ClassroomConstants.GET_ALL_TEST_FILES,\r\n        payload: response,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error); dispatch(AlertActions.error(error));\r\n    });\r\n};\r\nexport const get_all_assignment_folders = (classroom_id) => (dispatch) => {\r\n  ClassroomService.get_all_assignment_folders(classroom_id)\r\n    .then((response) => {\r\n      dispatch(AlertActions.success(\"Success\"));\r\n      dispatch({\r\n        type: ClassroomConstants.GET_ALL_ASSIGNMENT_FOLDERS,\r\n        payload: response,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error); dispatch(AlertActions.error(error));\r\n    });\r\n};\r\nexport const get_all_assignment_files = (classroom_id, assignment_id) => (dispatch) => {\r\n  ClassroomService.get_all_assignment_files(classroom_id, assignment_id)\r\n    .then((response) => {\r\n      dispatch(AlertActions.success(\"Success\"));\r\n      dispatch({\r\n        type: ClassroomConstants.GET_ALL_ASSIGNMENT_FILES,\r\n        payload: response,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error); dispatch(AlertActions.error(error));\r\n    });\r\n};\r\nconst ClassroomActions = {\r\n  get_all_classwork,\r\n  post_new_classroom_material,\r\n  delete_classwork,\r\n  post_teacher_to_classroom,\r\n  post_student_to_classroom,\r\n  update_student_marks,\r\n  upload_marked_classwork,\r\n  get_all_test_folders,\r\n  get_all_assignment_folders,\r\n  get_all_test_files,\r\n  get_all_assignment_files,\r\n};\r\nexport default ClassroomActions;"]},"metadata":{},"sourceType":"module"}