{"ast":null,"code":"import axios from 'axios';\nconst apiUrl = \"http://localhost:3000/api\";\nexport const ClassroomService = {\n  get_all_classwork,\n  post_new_classroom_material,\n  delete_classwork,\n  post_teacher_to_classroom,\n  post_student_to_classroom,\n  update_student_marks,\n  upload_marked_classwork,\n  get_all_test_folders,\n  get_all_assignment_folders,\n  get_all_test_files,\n  get_all_assignment_files\n}; // classroom functions\n\nasync function get_all_classwork() {\n  try {\n    let res = await axios({\n      url: `${apiUrl}/classroom/get-all-classwork`,\n      method: \"get\",\n      timeout: 8000,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nasync function get_all_test_folders(classroom_id) {\n  try {\n    let res = await axios({\n      url: `${apiUrl}/classroom/get-all-test-folder/${classroom_id}`,\n      method: \"get\",\n      timeout: 8000,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nasync function get_all_assignment_folders(classroom_id) {\n  try {\n    let res = await axios({\n      url: `${apiUrl}/classroom/get-all-assignment-folders/${classroom_id}`,\n      method: \"get\",\n      timeout: 8000,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nasync function get_all_test_files(classroom_id, test_id) {\n  /** details about location of student's file and the test it was uploaded for */\n  try {\n    let res = await axios({\n      url: `${apiUrl}/classroom/get-all-test-files/${classroom_id}/${test_id}`,\n      method: \"get\",\n      timeout: 8000,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nasync function get_all_assignment_files(classroom_id, assignment_id) {\n  try {\n    let res = await axios({\n      url: `${apiUrl}/classroom/get-all-assignment-files/${classroom_id}/${assignment_id}`,\n      method: \"get\",\n      timeout: 8000,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nasync function post_new_classroom_material(classroom_id, data) {\n  /**\r\n   * test, assignment etc\r\n   */\n  try {\n    let res = await axios({\n      url: `${apiUrl}/classroom/add-classroom-naterial/${classroom_id}`,\n      method: \"post\",\n      data,\n      timeout: 8000,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nasync function delete_classwork(classroom_id, material_id) {\n  try {\n    let res = await axios({\n      url: `${apiUrl}/classroom/delete-classwork/${classroom_id}/${material_id}`,\n      method: \"delete\",\n      timeout: 8000,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nasync function post_teacher_to_classroom(classroom_id, teacher_id) {\n  /** add teacher-id to classroom */\n  try {\n    let res = await axios({\n      url: `${apiUrl}/classroom/add-teacher/${classroom_id}/${teacher_id}`,\n      method: \"post\",\n      timeout: 8000,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nasync function post_student_to_classroom(classroom_id, student_id) {\n  /** add student-id to classroom */\n  try {\n    let res = await axios({\n      url: `${apiUrl}/classroom/add-student/${classroom_id}/${student_id}`,\n      method: \"post\",\n      timeout: 8000,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nasync function update_student_marks(classroom_id, student_id) {\n  try {\n    let res = await axios({\n      url: `${apiUrl}/classroom/update-student-marks/${classroom_id}/${student_id}`,\n      method: \"post\",\n      timeout: 8000,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nasync function upload_marked_classwork(classroom_id, classwork_id, data) {\n  try {\n    let res = await axios({\n      url: `${apiUrl}/classroom/upload-marked-classwork/${classroom_id}/${classwork_id}`,\n      method: \"post\",\n      data,\n      timeout: 8000,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return res.data;\n  } catch (err) {\n    console.error(err);\n  }\n}","map":{"version":3,"sources":["C:/Users/Hp 15/source/repos/devops2/clientweb/src/services/classroom.js"],"names":["axios","apiUrl","ClassroomService","get_all_classwork","post_new_classroom_material","delete_classwork","post_teacher_to_classroom","post_student_to_classroom","update_student_marks","upload_marked_classwork","get_all_test_folders","get_all_assignment_folders","get_all_test_files","get_all_assignment_files","res","url","method","timeout","headers","data","err","console","error","classroom_id","test_id","assignment_id","material_id","teacher_id","student_id","classwork_id"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nconst apiUrl = \"http://localhost:3000/api\";\r\n\r\nexport const ClassroomService = {\r\n  get_all_classwork,\r\n  post_new_classroom_material,\r\n  delete_classwork,\r\n  post_teacher_to_classroom,\r\n  post_student_to_classroom,\r\n  update_student_marks,\r\n  upload_marked_classwork,\r\n  get_all_test_folders,\r\n  get_all_assignment_folders,\r\n  get_all_test_files,\r\n  get_all_assignment_files,\r\n};\r\n\r\n// classroom functions\r\nasync function get_all_classwork() {\r\n   try {\r\n    let res = await axios({\r\n      url: `${apiUrl}/classroom/get-all-classwork`,\r\n      method: \"get\",\r\n      timeout: 8000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    return res.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\nasync function get_all_test_folders(classroom_id) {\r\n   try {\r\n    let res = await axios({\r\n      url: `${apiUrl}/classroom/get-all-test-folder/${classroom_id}`,\r\n      method: \"get\",\r\n      timeout: 8000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    return res.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\nasync function get_all_assignment_folders(classroom_id) {\r\n   try {\r\n    let res = await axios({\r\n      url: `${apiUrl}/classroom/get-all-assignment-folders/${classroom_id}`,\r\n      method: \"get\",\r\n      timeout: 8000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    return res.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\nasync function get_all_test_files(classroom_id,test_id) {\r\n    /** details about location of student's file and the test it was uploaded for */\r\n   try {\r\n    let res = await axios({\r\n      url: `${apiUrl}/classroom/get-all-test-files/${classroom_id}/${test_id}`,\r\n      method: \"get\",\r\n      timeout: 8000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    return res.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\nasync function get_all_assignment_files(classroom_id,assignment_id) {\r\n   try {\r\n    let res = await axios({\r\n      url: `${apiUrl}/classroom/get-all-assignment-files/${classroom_id}/${assignment_id}`,\r\n      method: \"get\",\r\n      timeout: 8000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    return res.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\nasync function post_new_classroom_material(classroom_id, data) {\r\n    /**\r\n     * test, assignment etc\r\n     */\r\n  try {\r\n    let res = await axios({\r\n      url: `${apiUrl}/classroom/add-classroom-naterial/${classroom_id}`,\r\n      method: \"post\",\r\n      data,\r\n      timeout: 8000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    return res.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\nasync function delete_classwork(classroom_id, material_id) {\r\n  try {\r\n    let res = await axios({\r\n      url: `${apiUrl}/classroom/delete-classwork/${classroom_id}/${material_id}`,\r\n      method: \"delete\",\r\n      timeout: 8000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    return res.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\nasync function post_teacher_to_classroom(classroom_id, teacher_id) {\r\n    /** add teacher-id to classroom */\r\n  try {\r\n    let res = await axios({\r\n      url: `${apiUrl}/classroom/add-teacher/${classroom_id}/${teacher_id}`,\r\n      method: \"post\",\r\n      timeout: 8000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    return res.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\nasync function post_student_to_classroom(classroom_id, student_id) {\r\n    /** add student-id to classroom */\r\n  try {\r\n    let res = await axios({\r\n      url: `${apiUrl}/classroom/add-student/${classroom_id}/${student_id}`,\r\n      method: \"post\",\r\n      timeout: 8000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    return res.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\nasync function update_student_marks(classroom_id, student_id) {\r\n  try {\r\n    let res = await axios({\r\n      url: `${apiUrl}/classroom/update-student-marks/${classroom_id}/${student_id}`,\r\n      method: \"post\",\r\n      timeout: 8000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    return res.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\nasync function upload_marked_classwork(classroom_id, classwork_id, data) {\r\n  try {\r\n    let res = await axios({\r\n      url: `${apiUrl}/classroom/upload-marked-classwork/${classroom_id}/${classwork_id}`,\r\n      method: \"post\",\r\n      data,\r\n      timeout: 8000,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    });\r\n    return res.data;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}