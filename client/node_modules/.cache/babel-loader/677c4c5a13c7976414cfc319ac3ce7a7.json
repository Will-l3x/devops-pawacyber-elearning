{"ast":null,"code":"/** Admin actions */\nimport { AdminService } from \"../services/admin\";\nimport AdminConstants from \"../constants/admin\";\nimport AlertActions from \"./alert\";\nexport const get_all_courses = () => dispatch => {\n  AdminService.get_all_courses().then(response => {\n    dispatch(AlertActions.success(\"Success\"));\n    dispatch({\n      type: AdminConstants.GET_ALL_COURSES,\n      payload: response\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch(AlertActions.error(error));\n  });\n};\nexport const post_new_course = data => dispatch => {\n  AdminService.post_new_course(data).then(response => {\n    dispatch(AlertActions.success(\"Success\"));\n    dispatch({\n      type: AdminConstants.ADD_NEW_COURSE,\n      payload: response\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch(AlertActions.error(error));\n  });\n};\nexport const post_course_topic = (course_id, data) => dispatch => {\n  AdminService.post_course_topic(course_id, data).then(response => {\n    dispatch(AlertActions.success(\"Success\"));\n    dispatch({\n      type: AdminConstants.ADD_COURSE_TOPIC,\n      payload: response\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch(AlertActions.error(error));\n  });\n};\nexport const delete_course = course_id => dispatch => {\n  AdminService.delete_course(course_id).then(response => {\n    dispatch(AlertActions.success(\"Success\"));\n    dispatch({\n      type: AdminConstants.DELETE_COURSE,\n      payload: response\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch(AlertActions.error(error));\n  });\n};\nexport const delete_course_topic = (course_id, topic_id) => dispatch => {\n  AdminService.delete_course_topic(course_id, topic_id).then(response => {\n    dispatch(AlertActions.success(\"Success\"));\n    dispatch({\n      type: AdminConstants.DELETE_COURSE_TOPIC,\n      payload: response\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch(AlertActions.error(error));\n  });\n};\nexport const get_course_material = course_id => dispatch => {\n  AdminService.get_course_material(course_id).then(response => {\n    dispatch(AlertActions.success(\"Success\"));\n    dispatch({\n      type: AdminConstants.GET_COURSE_MATERIAL,\n      payload: response\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch(AlertActions.error(error));\n  });\n};\nexport const post_course_material = (course_id, topic_id, data) => dispatch => {\n  AdminService.post_course_material(course_id, topic_id, data).then(response => {\n    dispatch(AlertActions.success(\"Success\"));\n    dispatch({\n      type: AdminConstants.ADD_COURSE_MATERIAL,\n      payload: response\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch(AlertActions.error(error));\n  });\n};\nexport const update_course_material = (course_id, topic_id, data) => dispatch => {\n  AdminService.update_course_material(course_id, topic_id, data).then(response => {\n    dispatch(AlertActions.success(\"Success\"));\n    dispatch({\n      type: AdminConstants.UPDATE_COURSE_MATERIAL,\n      payload: response\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch(AlertActions.error(error));\n  });\n};\nexport const get_all_teachers = () => dispatch => {\n  AdminService.get_all_teachers().then(response => {\n    dispatch(AlertActions.success(\"Success\"));\n    dispatch({\n      type: AdminConstants.GET_ALL_TEACHERS,\n      payload: response\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch(AlertActions.error(error));\n  });\n};\nexport const confirm_teacher = (teacher_id, data) => dispatch => {\n  AdminService.confirm_teacher(teacher_id, data).then(response => {\n    dispatch(AlertActions.success(\"Success\"));\n    dispatch({\n      type: AdminConstants.CONFIRM_TEACHER,\n      payload: response\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch(AlertActions.error(error));\n  });\n};\nexport const get_subscription_info = () => dispatch => {\n  AdminService.get_subscription_info().then(response => {\n    dispatch(AlertActions.success(\"Success\"));\n    dispatch({\n      type: AdminConstants.GET_SUBCRIPTION_INFO,\n      payload: response\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch(AlertActions.error(error));\n  });\n};\nexport const update_subscription_info = (subscription_id, data) => dispatch => {\n  AdminService.update_subscription_info(subscription_id, data).then(response => {\n    dispatch(AlertActions.success(\"Success\"));\n    dispatch({\n      type: AdminConstants.UPDATE_SUBCRIPTION_INFO,\n      payload: response\n    });\n  }).catch(error => {\n    console.log(error);\n    dispatch(AlertActions.error(error));\n  });\n};\nconst AdminActions = {\n  get_all_courses,\n  post_new_course,\n  post_course_topic,\n  delete_course,\n  get_course_material,\n  post_course_material,\n  update_course_material,\n  delete_course_topic,\n  get_all_teachers,\n  confirm_teacher,\n  get_subscription_info,\n  update_subscription_info\n};\nexport default AdminActions;","map":{"version":3,"sources":["C:/Users/Hp 15/source/repos/devops2/client/src/actions/admin.js"],"names":["AdminService","AdminConstants","AlertActions","get_all_courses","dispatch","then","response","success","type","GET_ALL_COURSES","payload","catch","error","console","log","post_new_course","data","ADD_NEW_COURSE","post_course_topic","course_id","ADD_COURSE_TOPIC","delete_course","DELETE_COURSE","delete_course_topic","topic_id","DELETE_COURSE_TOPIC","get_course_material","GET_COURSE_MATERIAL","post_course_material","ADD_COURSE_MATERIAL","update_course_material","UPDATE_COURSE_MATERIAL","get_all_teachers","GET_ALL_TEACHERS","confirm_teacher","teacher_id","CONFIRM_TEACHER","get_subscription_info","GET_SUBCRIPTION_INFO","update_subscription_info","subscription_id","UPDATE_SUBCRIPTION_INFO","AdminActions"],"mappings":"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","sourcesContent":["/** Admin actions */\r\n\r\nimport { AdminService } from \"../services/admin\";\r\nimport AdminConstants from \"../constants/admin\";\r\nimport AlertActions from \"./alert\";\r\n\r\nexport const get_all_courses = () => (dispatch) => {\r\n  AdminService.get_all_courses()\r\n    .then((response) => {\r\n      dispatch(AlertActions.success(\"Success\"));\r\n      dispatch({\r\n        type: AdminConstants.GET_ALL_COURSES,\r\n        payload: response,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      dispatch(AlertActions.error(error));\r\n    });\r\n};\r\nexport const post_new_course = (data) => (dispatch) => {\r\n  AdminService.post_new_course(data)\r\n    .then((response) => {\r\n      dispatch(AlertActions.success(\"Success\"));\r\n      dispatch({\r\n        type: AdminConstants.ADD_NEW_COURSE,\r\n        payload: response,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      dispatch(AlertActions.error(error));\r\n    });\r\n};\r\nexport const post_course_topic = (course_id, data) => (dispatch) => {\r\n  AdminService.post_course_topic(course_id, data)\r\n    .then((response) => {\r\n      dispatch(AlertActions.success(\"Success\"));\r\n      dispatch({\r\n        type: AdminConstants.ADD_COURSE_TOPIC,\r\n        payload: response,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      dispatch(AlertActions.error(error));\r\n    });\r\n};\r\nexport const delete_course = (course_id) => (dispatch) => {\r\n  AdminService.delete_course(course_id)\r\n    .then((response) => {\r\n      dispatch(AlertActions.success(\"Success\"));\r\n      dispatch({\r\n        type: AdminConstants.DELETE_COURSE,\r\n        payload: response,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      dispatch(AlertActions.error(error));\r\n    });\r\n};\r\nexport const delete_course_topic = (course_id, topic_id) => (dispatch) => {\r\n  AdminService.delete_course_topic(course_id, topic_id)\r\n    .then((response) => {\r\n      dispatch(AlertActions.success(\"Success\"));\r\n      dispatch({\r\n        type: AdminConstants.DELETE_COURSE_TOPIC,\r\n        payload: response,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      dispatch(AlertActions.error(error));\r\n    });\r\n};\r\nexport const get_course_material = (course_id) => (dispatch) => {\r\n  AdminService.get_course_material(course_id)\r\n    .then((response) => {\r\n      dispatch(AlertActions.success(\"Success\"));\r\n      dispatch({\r\n        type: AdminConstants.GET_COURSE_MATERIAL,\r\n        payload: response,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      dispatch(AlertActions.error(error));\r\n    });\r\n};\r\nexport const post_course_material = (course_id, topic_id, data) => (\r\n  dispatch\r\n) => {\r\n  AdminService.post_course_material(course_id, topic_id, data)\r\n    .then((response) => {\r\n      dispatch(AlertActions.success(\"Success\"));\r\n      dispatch({\r\n        type: AdminConstants.ADD_COURSE_MATERIAL,\r\n        payload: response,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      dispatch(AlertActions.error(error));\r\n    });\r\n};\r\nexport const update_course_material = (course_id, topic_id, data) => (\r\n  dispatch\r\n) => {\r\n  AdminService.update_course_material(course_id, topic_id, data)\r\n    .then((response) => {\r\n      dispatch(AlertActions.success(\"Success\"));\r\n      dispatch({\r\n        type: AdminConstants.UPDATE_COURSE_MATERIAL,\r\n        payload: response,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      dispatch(AlertActions.error(error));\r\n    });\r\n};\r\nexport const get_all_teachers = () => (dispatch) => {\r\n  AdminService.get_all_teachers()\r\n    .then((response) => {\r\n      dispatch(AlertActions.success(\"Success\"));\r\n      dispatch({\r\n        type: AdminConstants.GET_ALL_TEACHERS,\r\n        payload: response,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      dispatch(AlertActions.error(error));\r\n    });\r\n};\r\nexport const confirm_teacher = (teacher_id, data) => (dispatch) => {\r\n  AdminService.confirm_teacher(teacher_id, data)\r\n    .then((response) => {\r\n      dispatch(AlertActions.success(\"Success\"));\r\n      dispatch({\r\n        type: AdminConstants.CONFIRM_TEACHER,\r\n        payload: response,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      dispatch(AlertActions.error(error));\r\n    });\r\n};\r\nexport const get_subscription_info = () => (dispatch) => {\r\n  AdminService.get_subscription_info()\r\n    .then((response) => {\r\n      dispatch(AlertActions.success(\"Success\"));\r\n      dispatch({\r\n        type: AdminConstants.GET_SUBCRIPTION_INFO,\r\n        payload: response,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      dispatch(AlertActions.error(error));\r\n    });\r\n};\r\nexport const update_subscription_info = (subscription_id, data) => (\r\n  dispatch\r\n) => {\r\n  AdminService.update_subscription_info(subscription_id, data)\r\n    .then((response) => {\r\n      dispatch(AlertActions.success(\"Success\"));\r\n      dispatch({\r\n        type: AdminConstants.UPDATE_SUBCRIPTION_INFO,\r\n        payload: response,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n      dispatch(AlertActions.error(error));\r\n    });\r\n};\r\n\r\nconst AdminActions = {\r\n  get_all_courses,\r\n  post_new_course,\r\n  post_course_topic,\r\n  delete_course,\r\n  get_course_material,\r\n  post_course_material,\r\n  update_course_material,\r\n  delete_course_topic,\r\n  get_all_teachers,\r\n  confirm_teacher,\r\n  get_subscription_info,\r\n  update_subscription_info,\r\n};\r\nexport default AdminActions;\r\n"]},"metadata":{},"sourceType":"module"}